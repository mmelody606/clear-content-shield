
import { useState } from "react";
import { Plus, Minus } from "lucide-react";

const faqs = [
  {
    question: "How accurate is your plagiarism detection?",
    answer: "Our plagiarism detection tool boasts a 98% accuracy rate. It compares your content against billions of web pages, academic papers, and publications to identify matching text patterns, paraphrasing, and even cleverly disguised plagiarism."
  },
  {
    question: "Can your tool detect AI-generated content?",
    answer: "Yes, our AI content detector is specifically designed to identify text generated by AI models like ChatGPT, GPT-4, Bard, and other language models. It analyzes content patterns, language structure, and other proprietary metrics to determine if the content was likely created by AI."
  },
  {
    question: "How long does it take to get results?",
    answer: "For most documents, results are delivered within seconds. Larger documents (over 50 pages) may take 1-2 minutes to process completely, as our system conducts a thorough analysis for maximum accuracy."
  },
  {
    question: "Is my content secure when I upload it for checking?",
    answer: "Absolutely. We employ bank-level SSL encryption for all uploads. Your content is only used for the immediate analysis and is automatically deleted from our servers once the check is complete. We never store or reuse your intellectual property."
  },
  {
    question: "Do you offer refunds if I'm not satisfied?",
    answer: "Yes, we offer a 100% satisfaction guarantee. If our tools fail to perform as advertised, you can request a refund within 7 days of your purchase. Please refer to our Refund Policy page for detailed terms and conditions."
  },
  {
    question: "Can I check multiple documents at once?",
    answer: "Currently, our system processes one document at a time to ensure the highest accuracy. However, enterprise customers can contact us for batch processing options."
  },
];

const FAQSection = () => {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const toggleFAQ = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <section className="py-16 px-4 md:px-6 lg:px-8 bg-white">
      <div className="max-w-4xl mx-auto">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">Frequently Asked Questions</h2>
          <p className="text-xl text-gray-600">
            Find answers to common questions about our services
          </p>
        </div>

        <div className="space-y-4">
          {faqs.map((faq, index) => (
            <div
              key={index}
              className="border border-gray-200 rounded-lg overflow-hidden"
            >
              <button
                className="flex justify-between items-center w-full p-6 text-left focus:outline-none"
                onClick={() => toggleFAQ(index)}
              >
                <h3 className="text-lg font-medium">{faq.question}</h3>
                <div className="ml-4">
                  {openIndex === index ? (
                    <Minus className="h-5 w-5 text-primary" />
                  ) : (
                    <Plus className="h-5 w-5 text-primary" />
                  )}
                </div>
              </button>
              {openIndex === index && (
                <div className="px-6 pb-6">
                  <p className="text-gray-600">{faq.answer}</p>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default FAQSection;
